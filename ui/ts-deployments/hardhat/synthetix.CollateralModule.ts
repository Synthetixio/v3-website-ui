export const address = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';
export const abi = [
	'error InsufficientAvailableCollateral(uint256 accountId, address collateralType, uint256 requestedAmount)',
	'error InvalidCollateralType(address collateralType)',
	'error OutOfBounds()',
	'error PositionOutOfBounds()',
	'error RoleNotAuthorized(uint256 accountId, bytes32 role, address target)',
	'error Unauthorized(address addr)',
	'error ValueAlreadyInSet()',
	'event CollateralAdjusted(address collateralType, address priceFeed, uint256 targetCRatio, uint256 minimumCRatio, bool enabled)',
	'event CollateralStaked(uint256 accountId, address collateralType, uint256 amount, address executedBy)',
	'event CollateralUnstaked(uint256 accountId, address collateralType, uint256 amount, address executedBy)',
	'function adjustCollateralType(address collateralType, address priceFeed, uint256 targetCRatio, uint256 minimumCRatio, bool enabled)',
	'function cleanExpiredLocks(uint256 accountId, address collateralType, uint256 offset, uint256 items)',
	'function getAccountCollateralTotals(uint256 accountId, address collateralType) view returns (uint256 totalStaked, uint256 totalAssigned, uint256 totalLocked)',
	'function getAccountCollaterals(uint256 accountId) view returns (address[] collateralTypes)',
	'function getAccountUnassignedCollateral(uint256 accountId, address collateralType) view returns (uint256)',
	'function getAccountUnstakebleCollateral(uint256 accountId, address collateralType) view returns (uint256)',
	'function getCollateralType(address collateralType) view returns (tuple(bool enabled, uint256 targetCRatio, uint256 minimumCRatio, address priceFeed, address tokenAddress))',
	'function getCollateralTypes(bool hideDisabled) view returns (tuple(bool enabled, uint256 targetCRatio, uint256 minimumCRatio, address priceFeed, address tokenAddress)[])',
	'function stake(uint256 accountId, address collateralType, uint256 amount)',
	'function unstake(uint256 accountId, address collateralType, uint256 amount)',
];
