export const address = '0xbA8403ea9784E756c9ee61DeA1143922dE958B77';
export const abi = [
  'error InvalidRole()',
  'error MismatchAssociatedSystemKind(bytes32 expected, bytes32 actual)',
  'error OnlyTokenProxyAllowed(address origin)',
  'error PositionOutOfBounds()',
  'error RoleNotAuthorized(uint256 accountId, bytes32 role, address target)',
  'error Unauthorized(address addr)',
  'error ValueAlreadyInSet()',
  'error ValueNotInSet()',
  'error ZeroAddress()',
  'event AccountCreated(address accountAddress)',
  'event NominatedNewOwner(address nominatedOwner, uint256 accountId)',
  'event OwnershipAccepted(address sender, uint256 accountId)',
  'event OwnershipRenounced(address sender, uint256 accountId)',
  'event RoleGranted(uint256 accountId, bytes32 role, address target, address executedBy)',
  'event RoleRevoked(uint256 accountId, bytes32 role, address target, address executedBy)',
  'function acceptAccountOwnership(uint256 accountId)',
  'function createAccount(uint256 accountId)',
  'function getAccountAddress() view returns (address)',
  'function getAccountPermissions(uint256 accountId) view returns (tuple(address target, bytes32[] roles)[])',
  'function grantRole(uint256 accountId, bytes32 role, address target)',
  'function hasRole(uint256 accountId, bytes32 role, address target) view returns (bool)',
  'function nominateNewAccountOwner(address nominatedOwner, uint256 accountId)',
  'function nominatedAccountOwnerOf(uint256 accountId) view returns (address)',
  'function renounceAccountNomination(uint256 accountId)',
  'function renounceRole(uint256 accountId, bytes32 role, address target)',
  'function revokeRole(uint256 accountId, bytes32 role, address target)',
  'function transferAccount(address to, uint256 accountId)',
];
