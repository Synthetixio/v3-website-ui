export const address = '0x4ABEaCA4b05d8fA4CED09D26aD28Ea298E8afaC8';
export const abi = [
	'error AlreadyInitialized()',
	'error CannotSelfApprove(address)',
	'error ImplementationIsSterile(address implementation)',
	'error IndexOutOfBounds()',
	'error InvalidTransferRecipient(address)',
	'error NoChange()',
	'error NotAContract(address contr)',
	'error NotNominated(address addr)',
	'error TokenAlreadyMinted(uint256)',
	'error TokenDoesNotExist(uint256)',
	'error Unauthorized(address addr)',
	'error UpgradeSimulationFailed()',
	'error ZeroAddress()',
	'event AccountMinted(address owner, uint256 accountId)',
	'event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)',
	'event ApprovalForAll(address indexed owner, address indexed operator, bool approved)',
	'event OwnerChanged(address oldOwner, address newOwner)',
	'event OwnerNominated(address newOwner)',
	'event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)',
	'event Upgraded(address implementation)',
	'function acceptOwnership()',
	'function approve(address to, uint256 tokenId)',
	'function balanceOf(address holder) view returns (uint256)',
	'function getApproved(uint256 tokenId) view returns (address)',
	'function getImplementation() view returns (address)',
	'function initialize(string tokenName, string tokenSymbol, string uri, address mainProxy)',
	'function isAccountInitialized() view returns (bool)',
	'function isApprovedForAll(address holder, address operator) view returns (bool)',
	'function mint(address owner, uint256 accountId)',
	'function name() view returns (string)',
	'function nominateNewOwner(address newNominatedOwner)',
	'function nominatedOwner() view returns (address)',
	'function owner() view returns (address)',
	'function ownerOf(uint256 tokenId) view returns (address)',
	'function renounceNomination()',
	'function safeTransferFrom(address from, address to, uint256 tokenId)',
	'function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)',
	'function setApprovalForAll(address operator, bool approved)',
	'function simulateUpgradeTo(address newImplementation)',
	'function supportsInterface(bytes4 interfaceId) view returns (bool)',
	'function symbol() view returns (string)',
	'function tokenByIndex(uint256 index) view returns (uint256)',
	'function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)',
	'function tokenURI(uint256 tokenId) view returns (string)',
	'function totalSupply() view returns (uint256)',
	'function transferFrom(address from, address to, uint256 tokenId)',
	'function upgradeTo(address newImplementation)',
];
