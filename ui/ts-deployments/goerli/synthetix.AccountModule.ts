export const address = '0x51222Fc4c81Edf897eAB7A5caCB7EcAC72eB8Fa4';
export const abi = [
  'error AlreadyInitialized()',
  'error InvalidRole()',
  'error NotInitialized()',
  'error OnlyTokenProxyAllowed(address origin)',
  'error RoleNotAuthorized(uint256 accountId, bytes32 role, address target)',
  'error Unauthorized(address addr)',
  'error ValueAlreadyInSet()',
  'error ValueNotInSet()',
  'error ZeroAddress()',
  'event AccountCreated(address accountAddress)',
  'event RoleGranted(uint256 accountId, bytes32 role, address target, address executedBy)',
  'event RoleRevoked(uint256 accountId, bytes32 role, address target, address executedBy)',
  'function createAccount(uint256 accountId)',
  'function getAccountAddress() view returns (address)',
  'function getAccountModuleSatellites() view returns (tuple(bytes32 name, bytes32 contractName, address deployedAddress)[])',
  'function grantRole(uint256 accountId, bytes32 role, address target)',
  'function hasRole(uint256 accountId, bytes32 role, address target) view returns (bool)',
  'function initializeAccountModule()',
  'function isAccountModuleInitialized() view returns (bool)',
  'function renounceRole(uint256 accountId, bytes32 role, address target)',
  'function revokeRole(uint256 accountId, bytes32 role, address target)',
  'function transferAccount(address to, uint256 accountId)',
  'function upgradeAccountImplementation(address newAccountTokenImplementation)',
];
